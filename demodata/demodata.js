const demo = {}

demo.kamstrup = {}
demo.kamstrup.first = Buffer.from([0x7E, 0xA0, 0xE2, 0x2B, 0x21, 0x13, 0x23, 0x9A, 0xE6, 0xE7, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x07, 0xE2, 0x0C, 0x02, 0x07, 0x16, 0x2A, 0x28, 0xFF, 0x80, 0x00, 0x00, 0x02, 0x19, 0x0A, 0x0E, 0x4B, 0x61, 0x6D, 0x73, 0x74, 0x72, 0x75, 0x70, 0x5F, 0x56, 0x30, 0x30, 0x30, 0x31, 0x09, 0x06, 0x01, 0x01, 0x00, 0x00, 0x05, 0xFF, 0x0A, 0x10, 0x35, 0x37, 0x30, 0x36, 0x35, 0x36, 0x37, 0x32, 0x38, 0x34, 0x33, 0x35, 0x36, 0x39, 0x38, 0x35, 0x09, 0x06, 0x01, 0x01, 0x60, 0x01, 0x01, 0xFF, 0x0A, 0x12, 0x36, 0x38, 0x34, 0x31, 0x31, 0x32, 0x31, 0x42, 0x4E, 0x32, 0x34, 0x33, 0x31, 0x30, 0x31, 0x30, 0x34, 0x30, 0x09, 0x06, 0x01, 0x01, 0x01, 0x07, 0x00, 0xFF, 0x06, 0x00, 0x00, 0x04, 0xE8, 0x09, 0x06, 0x01, 0x01, 0x02, 0x07, 0x00, 0xFF, 0x06, 0x00, 0x00, 0x00, 0x00, 0x09, 0x06, 0x01, 0x01, 0x03, 0x07, 0x00, 0xFF, 0x06, 0x00, 0x00, 0x00, 0x00, 0x09, 0x06, 0x01, 0x01, 0x04, 0x07, 0x00, 0xFF, 0x06, 0x00, 0x00, 0x01, 0x62, 0x09, 0x06, 0x01, 0x01, 0x1F, 0x07, 0x00, 0xFF, 0x06, 0x00, 0x00, 0x01, 0x94, 0x09, 0x06, 0x01, 0x01, 0x33, 0x07, 0x00, 0xFF, 0x06, 0x00, 0x00, 0x01, 0x52, 0x09, 0x06, 0x01, 0x01, 0x47, 0x07, 0x00, 0xFF, 0x06, 0x00, 0x00, 0x00, 0xF2, 0x09, 0x06, 0x01, 0x01, 0x20, 0x07, 0x00, 0xFF, 0x12, 0x00, 0xF0, 0x09, 0x06, 0x01, 0x01, 0x34, 0x07, 0x00, 0xFF, 0x12, 0x00, 0xEF, 0x09, 0x06, 0x01, 0x01, 0x48, 0x07, 0x00, 0xFF, 0x12, 0x00, 0xF3, 0xA7, 0x53, 0x7E]);

demo.kamstrup.second = Buffer.from([0x7E, 0xA1, 0x2C, 0x2B, 0x21, 0x13, 0xFC, 0x04, 0xE6, 0xE7, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x07, 0xE2, 0x03, 0x04, 0x07, 0x15, 0x00, 0x05, 0xFF, 0x80, 0x00, 0x00, 0x02, 0x23, 0x0A, 0x0E, 0x4B, 0x61, 0x6D, 0x73, 0x74, 0x72, 0x75, 0x70, 0x5F, 0x56, 0x30, 0x30, 0x30, 0x31, 0x09, 0x06, 0x01, 0x01, 0x00, 0x00, 0x05, 0xFF, 0x0A, 0x10, 0x35, 0x37, 0x30, 0x36, 0x35, 0x36, 0x37, 0x32, 0x37, 0x34, 0x33, 0x38, 0x39, 0x37, 0x30, 0x32, 0x09, 0x06, 0x01, 0x01, 0x60, 0x01, 0x01, 0xFF, 0x0A, 0x12, 0x36, 0x38, 0x34, 0x31, 0x31, 0x32, 0x31, 0x42, 0x4E, 0x32, 0x34, 0x33, 0x31, 0x30, 0x31, 0x30, 0x34, 0x30, 0x09, 0x06, 0x01, 0x01, 0x01, 0x07, 0x00, 0xFF, 0x06, 0x00, 0x00, 0x0E, 0x3B, 0x09, 0x06, 0x01, 0x01, 0x02, 0x07, 0x00, 0xFF, 0x06, 0x00, 0x00, 0x00, 0x00, 0x09, 0x06, 0x01, 0x01, 0x03, 0x07, 0x00, 0xFF, 0x06, 0x00, 0x00, 0x00, 0x86, 0x09, 0x06, 0x01, 0x01, 0x04, 0x07, 0x00, 0xFF, 0x06, 0x00, 0x00, 0x00, 0x00, 0x09, 0x06, 0x01, 0x01, 0x1F, 0x07, 0x00, 0xFF, 0x06, 0x00, 0x00, 0x04, 0x21, 0x09, 0x06, 0x01, 0x01, 0x33, 0x07, 0x00, 0xFF, 0x06, 0x00, 0x00, 0x03, 0x0C, 0x09, 0x06, 0x01, 0x01, 0x47, 0x07, 0x00, 0xFF, 0x06, 0x00, 0x00, 0x04, 0x1C, 0x09, 0x06, 0x01, 0x01, 0x20, 0x07, 0x00, 0xFF, 0x12, 0x00, 0xE2, 0x09, 0x06, 0x01, 0x01, 0x34, 0x07, 0x00, 0xFF, 0x12, 0x00, 0xE0, 0x09, 0x06, 0x01, 0x01, 0x48, 0x07, 0x00, 0xFF, 0x12, 0x00, 0xDF, 0x09, 0x06, 0x00, 0x01, 0x01, 0x00, 0x00, 0xFF, 0x09, 0x0C, 0x07, 0xE2, 0x03, 0x04, 0x07, 0x15, 0x00, 0x05, 0xFF, 0x80, 0x00, 0x00, 0x09, 0x06, 0x01, 0x01, 0x01, 0x08, 0x00, 0xFF, 0x06, 0x00, 0x1A, 0x40, 0x49, 0x09, 0x06, 0x01, 0x01, 0x02, 0x08, 0x00, 0xFF, 0x06, 0x00, 0x00, 0x00, 0x00, 0x09, 0x06, 0x01, 0x01, 0x03, 0x08, 0x00, 0xFF, 0x06, 0x00, 0x00, 0x05, 0x64, 0x09, 0x06, 0x01, 0x01, 0x04, 0x08, 0x00, 0xFF, 0x06, 0x00, 0x02, 0x7B, 0x21, 0x20, 0x92, 0x7E])


demo.kaifa = {}
/**
 * List 1
 * Length: 39bytes + start && end = 41bytes total.
 * Clock: 2018-12-03 18:00:12
 * Active power + (W): 3353
 */
demo.kaifa.first = Buffer.from([0x7E, 0xA0, 0x27, 0x01, 0x02, 0x01, 0x10, 0x5A, 0x87, 0xE6, 0xE7, 0x00, 0x0F, 0x40, 0x00, 0x00, 0x00, 0x09, 0x0C, 0x07, 0xE2, 0x0C, 0x03, 0x01, 0x12, 0x00, 0x0C, 0xFF, 0x80, 0x00, 0x00, 0x02, 0x01, 0x06, 0x00, 0x00, 0x0D, 0x19, 0x24, 0x79, 0x7E]);

/**
 * List 2
 * Length: 121bytes + start && end = 123bytes total.
 * Clock: 2018-12-03 18:00:20
 * OBIS List version: KFM_001
 * Meter ID: xxxxxxxxxxxxxxxx Type: MA304H3E
 * Active power + (W): 3879 Active power - (W): 0
 * Reactive power + (VAR): 77 Reactive power - (VAR): 0
 * Current L1(A x 1000): 4430 
 * Current L2(A x 1000): 14492 
 * Current L3(A x 1000): 11818
 * Voltage L1(V x 10): 2393 
 * Voltage L2(V x 10): 0 
 * Voltage L3(V x 10): 2384
 */
demo.kaifa.second = Buffer.from([0x7E, 0xA0, 0x79, 0x01, 0x02, 0x01, 0x10, 0x80, 0x93, 0xE6, 0xE7, 0x00, 0x0F, 0x40, 0x00, 0x00, 0x00, 0x09, 0x0C, 0x07, 0xE2, 0x0C, 0x03, 0x01, 0x12, 0x00, 0x14, 0xFF, 0x80, 0x00, 0x00, 0x02, 0x0D, 0x09, 0x07, 0x4B, 0x46, 0x4D, 0x5F, 0x30, 0x30, 0x31, 0x09, 0x10, 0x36, 0x39, 0x37, 0x30, 0x36, 0x33, 0x31, 0x34, 0x30, 0x34, 0x32, 0x39, 0x30, 0x34, 0x37, 0x30, 0x09, 0x08, 0x4D, 0x41, 0x33, 0x30, 0x34, 0x48, 0x33, 0x45, 0x06, 0x00, 0x00, 0x0F, 0x27, 0x06, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x4D, 0x06, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x11, 0x4E, 0x06, 0x00, 0x00, 0x38, 0x9C, 0x06, 0x00, 0x00, 0x2E, 0x2A, 0x06, 0x00, 0x00, 0x09, 0x59, 0x06, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x09, 0x50, 0x66, 0x57, 0x7E]);

/**
 * List 3
 * Length: 155bytes + start && end = 157bytes total
 * Clock: 2018 - 12 - 03 18: 00: 10
 * OBIS List version: KFM_001
 * Meter ID: xxxxxxxxxxxxxxxx Type: MA304H3E
 * Active power + (W): 3352 Active power - (W): 0
 * Reactive power + (VAR): 76 Reactive power - (VAR): 0
 * Current L1(A x 1000): 4433 
 * Current L2(A x 1000): 12397 
 * Current L3(A x 1000): 9594
 * Voltage L1(V x 10): 2395 
 * Voltage L2(V x 10): 0 
 * Voltage L3(V x 10): 2388
 * Active energy + (Wh): 7824570 
 * Active energy - (Wh): 0
 * Reactive energy + (VARh): 538614 
 * Reactive energy - (VARh): 59005
 */
demo.kaifa.third = Buffer.from([0x7E, 0xA0, 0x9B, 0x01, 0x02, 0x01, 0x10, 0xEE, 0xAE, 0xE6, 0xE7, 0x00, 0x0F, 0x40, 0x00, 0x00, 0x00, 0x09, 0x0C, 0x07, 0xE2, 0x0C, 0x03, 0x01, 0x12, 0x00, 0x0A, 0xFF, 0x80, 0x00, 0x00, 0x02, 0x12, 0x09, 0x07, 0x4B, 0x46, 0x4D, 0x5F, 0x30, 0x30, 0x31, 0x09, 0x10, 0x36, 0x39, 0x37, 0x30, 0x36, 0x33, 0x31, 0x34, 0x30, 0x34, 0x32, 0x39, 0x30, 0x34, 0x37, 0x30, 0x09, 0x08, 0x4D, 0x41, 0x33, 0x30, 0x34, 0x48, 0x33, 0x45, 0x06, 0x00, 0x00, 0x0D, 0x18, 0x06, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x4C, 0x06, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x11, 0x51, 0x06, 0x00, 0x00, 0x30, 0x6D, 0x06, 0x00, 0x00, 0x25, 0x7A, 0x06, 0x00, 0x00, 0x09, 0x5B, 0x06, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x09, 0x54, 0x09, 0x0C, 0x07, 0xE2, 0x0C, 0x03, 0x01, 0x12, 0x00, 0x0A, 0xFF, 0x80, 0x00, 0x00, 0x06, 0x00, 0x77, 0x64, 0xBA, 0x06, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x08, 0x37, 0xF6, 0x06, 0x00, 0x00, 0xE6, 0x7D, 0xFA, 0xBD, 0x7E]);


demo.aidon = {}
demo.aidon.first = Buffer.from([]);
demo.aidon.second = Buffer.from([]);
demo.aidon.third = Buffer.from([]);

module.exports = demo;
